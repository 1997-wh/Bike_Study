---
title: "Cyclistic Bike-Share Analysis Case Study"
output:
  word_document: default
  pdf_document: default
  html_document: default
---

## 1. Ask 

Moreno has set a clear goal: Design marketing strategies aimed at converting casual riders into annual members. In order to do that, however, the marketing analyst team needs to better understand how annual members and casual riders differ, why casual riders would buy a membership, and how digital media could affect their marketing tactics. Moreno and her team are interested in analyzing the Cyclistic historical bike trip data to identify trends.

These three questions will guide the future marketing program:

- How do annual members and casual riders use Cyclistic bikes differently?
- Why would casual riders buy Cyclistic annual memberships?
- How can Cyclistic use digital media to influence casual riders to become members?

Our first business task is to identify how annual members and casual riders use Cyclistic bikes differently. Understanding how these two different customer profiles interact with the company’s offerings is key to designing effective marketing strategies that convert casual riders to annual memberships while using data to drive these decisions and fuel the company’s future growth.


## 2. Prepare

### Data Source:
This analysis uses primary source data downloaded from Cyclistic's internal data. This dataset is made available by divvy open source data. It is licensed under Motivate International Inc. This dataset consists of primary data collected from bike trackers and is all in quantitative measurements. We identify our users from their membership status and ride id. No other personal data was collected from users. For biking records, we have data on geospatial location, length of each ride, and bike type. With the available data, we will be able to examine the difference between two user types based on existing correlations but we will not be able to identify the real reasons behind trends.

### Data organization:
The data used for this analysis covers the trips during the 12-month period,spanning between[January-2021 to December-2021] a set of .CSV format files organized by months and years. It comes with 13 columns, including :
1.ride_id: Unique ride id for each trip record
2.rideable_type: Type of bikes used by bikers- docked, electric and classic bikes
3.started_at: start DateTime of the ride
4.ended_at: end DateTime of the ride
5.start_station_name: Name of the station the ride started
6.start_station_id: ID of the station the ride started
7.end_station_name: Name of the station the ride ended
8.end_station_id: ID of the station the ride ended
9.start_lat: Latitude of where the ride started
10.start_lng: Longitude of where the ride started
11.end_lat: Latitude of where the ride ended
12.end_lng: Longitude of where the ride ended
13.member_casual: Type of bikers- casual riders or members.

### Data Credibility Using ROCC Method:

Reliable: dataset appears to have many missing values in non-primary key columns and inconsistent station names. However, this deficiency is countered by the comprehensive latitude and longitude data. Dataset is also weak in data validation on the start and end time of bike rides, having some end times earlier than start times, but incorrect records only make up less than .01% of the whole dataset, so this isn't a significant issue with reliability.
Original: data source is primary
Comprehensive: dataset consists of more than 5 million rows of complete data
Current: using up-to-date datasets that reflect the last 12 months of cycling data
Vetted: recorded bike trips are based on real records from a primary source from an actual bike-share company*

### Data acquisition process
The following process is utilized:

Each dataset is downloaded
Appropriately stored in a folder for original datasets

### Identifying
In order to identify issues with the data, we:
- Evaluate the ride length and spot unusual observations
- Filtered the data and identified missing values, duplicates...
- Sorted the data and found inconsistent attribute format

## 3. Process

Data Cleaning - Excel:
Remove negative values in column "ride_length". Since we are measuring the duration of a bike ride, our result from ended_at - started_at should not be a negative value. A negative value may occur if a bike ride's start or end time is recorded incorrectly.
Sort "ride_length" in ASC order. 

No negative data found.

Remove duplicate data in column "ride_id". Each record in this column represents an identifier for each unique bike ride. No bike ride should have repeat values. 
Check ride_id for duplicates using conditional formatting
Remove duplicate values from the ride_id column by selecting the "ride_id" column, using "Remove Duplicates" in the Data tab, choose "continue with the current selection," and then click "Remove Duplicates".

No duplicates found in datasets.

```{r}
#install.packages("tidyverse")  #tidyverse includes core packages like ggplot2 and readr which are helpful to wrangle data

#install.packages("lubridate")  #helps wrangle date attributes

#install.packages("ggplot2")  #helps visualize data
#install.packages("dplyr")
```


```{r}
library(tidyverse)  #tidyverse includes core packages like ggplot2 and readr which are helpful to wrangle data

library(lubridate)  #helps wrangle date attributes

library(ggplot2)  #helps visualize data

library(dplyr)
```


```{r}
#install.packages("readxl")
```

```{r}
library("readxl")
# xls files
data_Q1 <- read_excel("C:/Users/dorra/OneDrive/Documents/Data/Divvy_Trips_2019_Q1.xlsx")
data_Q2 <- read_excel("C:/Users/dorra/OneDrive/Documents/Data/Divvy_Trips_2019_Q2.xlsx")
data_Q3 <- read_excel("C:/Users/dorra/OneDrive/Documents/Data/Divvy_Trips_2019_Q3.xlsx")
```

Compare column names each of the files
While the names don't have to be in the same order, they DO need to match perfectly before we can use a command to join them into one file

```{r}
colnames(data_Q1)

colnames(data_Q2)

colnames(data_Q3)
```
All columns have the same name

```{r}
str(data_Q1)

str(data_Q2)

str(data_Q3)
```
Convert trip_id and bikeid to character so that they can stack correctly

```{r}
data_Q1 <-  mutate(data_Q1, trip_id = as.character(trip_id)
                   ,bikeid = as.character(bikeid)) 
data_Q2 <-  mutate(data_Q2, trip_id = as.character(trip_id)
                   ,bikeid = as.character(bikeid)) 
data_Q3 <-  mutate(data_Q3, trip_id = as.character(trip_id)
                   ,bikeid = as.character(bikeid))
```

Combining dataframes into one big dataframe
 Stack individual quarter's data frames into one big data frame

```{r}
all_trips <- bind_rows(data_Q1, data_Q2, data_Q3)
```


```{r}
# Inspect the new table that has been created

colnames(all_trips)  #List of column names
nrow(all_trips)  #How many rows are in data frame?

dim(all_trips)  #Dimensions of the data frame?

head(all_trips)  #See the first 6 rows of data frame.  Also tail(qs_raw)

str(all_trips)  #See list of columns and data types (numeric, character, etc)
```
### Statistical summary of data. 

Mainly for numeric

```{r}
summary(all_trips)
```
```{r}
distinct_trip_count <- all_trips %>%
  summarise(distinct_trips = n_distinct(trip_id))
distinct_trip_count
```

There are no duplications.

```{r}
unique_usertypes <- unique(all_trips$usertype)

print(unique_usertypes)
```

We only have two terms for user type which is referring to casual and member
```{r}
unique_day <- unique(all_trips$day_of_week)

print(unique_day)
```


```{r}
all_trips <- all_trips %>%
  mutate(
    # Convert ride_length to actual duration in minutes
    ride_length = hour(ride_length) * 60 + minute(ride_length) + second(ride_length) / 60
  )
```



```{r}
negative_rides <- all_trips %>%
  mutate(duration = as.numeric(difftime(end_time, start_time, units = "secs"))) %>%
  filter(duration < 0)

# Count of negative durations
negative_count <- nrow(negative_rides)

# Print results
print(paste("Number of rides with negative duration:", negative_count))
```
There are no issues with time logs as well.

## 4.Analyze

###  Descriptive analysis

```{r}
summary(all_trips$ride_length)
```

The shortest ride was 0.58 minutes (34 seconds) and the longest ride was 1439.75 minutes (almost 24 hours)


```{r}
# Compare members and casual users
aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = mean)
```

Casuals take the bike for a longer time then members.
```{r}
aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = median)


aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = max)


aggregate(all_trips$ride_length ~ all_trips$usertype, FUN = min)
```

```{r}


# Now, let's run the average ride time by each day for members vs casual users
aggregate(all_trips$ride_length ~ all_trips$usertype + all_trips$day_of_week, FUN = mean)
```
noting that 1 = Sunday and 7 =
Saturday.

Casuals have longer rides on Sunday and Monday.

```{r}
# analyze ridership data by type and weekday
all_trips %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>%  #creates weekday field using wday()
  group_by(usertype, weekday) %>%  #groups by usertype and weekday
  summarise(number_of_rides = n()                           #calculates the number of rides and average duration 
            ,average_duration = mean(ride_length)) %>%      # calculates the average duration
  arrange(usertype, weekday)
```

### 5. Share

Let's visualize the number of rides by rider type

```{r}
# Let's visualize the number of rides by rider type
library(ggplot2)
all_trips %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(usertype, weekday)  %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = usertype)) +
  geom_col(position = "dodge") +
  labs(
      title = "Number of rides by rider type",
      subtitle = "Sorted by weekday"
      )
```
```{r}
all_trips <- all_trips %>%
  mutate(month = month(start_time, label = TRUE))
```


```{r}
# Let's create a visualization for average duration
all_trips %>% 
  mutate(weekday = wday(start_time, label = TRUE)) %>% 
  group_by(usertype, month) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(usertype, month)  %>% 
  ggplot(aes(x = month, y = average_duration, fill = usertype)) +
  geom_col(position = "dodge") + 
  labs(title = "Average duration by rider type", 
       subtitle = "Sorted by month")
```


```{r}

# Filter and count the stations
top_stations <- all_trips %>%
  filter(usertype == "Customer") %>%
  count(from_station_name, sort = TRUE) %>%
  top_n(6, n)

# Create the histogram
ggplot(top_stations, aes(x = reorder(from_station_name, n), y = n)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  coord_flip() +  # This makes it a horizontal bar chart
  labs(title = "Top 6 Starting Stations for Customers",
       x = "Station Name",
       y = "Number of Rides") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 0, hjust = 1))
```
```{r}


# Filter and count the stations
top_stations <- all_trips %>%
  filter(usertype == "Subscriber") %>%
  count(from_station_name, sort = TRUE) %>%
  top_n(6, n)

# Create the histogram
ggplot(top_stations, aes(x = reorder(from_station_name, n), y = n)) +
  geom_bar(stat = "identity", fill = "red") +
  coord_flip() +  # This makes it a horizontal bar chart
  labs(title = "Top 6 Starting Stations for Subscribers",
       x = "Station Name",
       y = "Number of Rides") +
  theme_minimal() +
  theme(axis.text.y = element_text(angle = 0, hjust = 1))
```
We can clearly see the casual rides are mostly located around the center of the town (or the bay area), with all their trips located around that area points towards their bike usage pattern, which is for leisure, probably tourist or sightseeing related rides.

Members are mostly using bikes all over the city including main city area and outside main center. This can be hypothesized as they travel for work purpose.


#### KEY TAKEAWAYS

- Members holds the biggest proportion of the total rides, ~10% bigger than casuals riders.
- In all months we have more members than casual riders.
- For casual riders the biggest volume of data is on the the weekend.
- There is a bigger volume of bikers in the afternoon.
- This could be possible that members use bikes for work purpose, this information can be backed by their bike usage in colder months, where there is significant drop in casual members in those months.

Now for how members differs from casuals:
- Members have the bigger volume of data, except on saturday and sunday. On the weekend, casuals riders have the most data points.
- Casuals riders have more ride length (ride duration) than members. Average ride time of member are mostly same with a slight increase towards the end of the week.
- We have more members during the morning, mainly between 7am and 10am. And more casual riders between 3pm and 12am.
- Members have a bigger preference for classic bikes, followed by electric bike.
- Members have a more fixed use for bikes for routine activities. Where as casual rider's usage is different, mostly all activity are on the weekend.
- Casual members spend time near the center of the city or the bay area, where as members are scattered throughout the city.


## 6. Act

Casual riders spent more time on bikes and member riders spent less time biking than casual riders.

On weekends, the number of casual bike riders increases. The most popular day for bike renting for all subscribers was Saturday. Sunday was the second most popular day for casual users.

It seems like casual riders use bikes for picnics and short trips on weekends and casual users use bikes for general purposes like for going to school.

The data clearly showed seasonal fluctuations in ridership of all users, both in the number of rides and the average trip duration. It peaked during the summer months and was at its lowest point from the late fall to early spring, especially among casual users.



### Recommendations

* Company may give discounts on weekends if casual users take annual membership.Company may Offer weekend passes. This option may lead local users to purchase an annual membership.

* Company may give more discounts on long rides. Company should also offer seasonal passes as well. If the winter season pass is offered at a discount, some casual users might be willing to try it at a fraction of a 
  membership cost before deciding to become year-long subscribers.

* Provide a greener and echo friendly option for riders by Offering discounts to businesses, It might also motivate more casual users to cycle to work more often or all the time.
